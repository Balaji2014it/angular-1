////////reactive form code


import { Component } from '@angular/core';
import {FormGroup,FormBuilder, Validators} from '@angular/forms';
import { ProductService } from '../services/product.service';


@Component({
    template:`<h1>Reactive Form</h1>

    <div *ngIf="success" class="alert alert-success">Successfully saved..!</div>

<form [formGroup]="frm">
    <div class ="col-md-5">

    <div class="form-group">
    <input type="text" placeholder="Brand" class="form-control" formControlName="brand"/>
    <span *ngIf="frm.controls.brand.touched && frm.controls.brand. errors?.required" class="text-danger">Required</span>
    <span *ngIf="frm.controls.brand.touched && frm.controls.brand. errors?.minlength" class="text-danger">min 3 chars</span>
    <span *ngIf="frm.controls.brand.touched && frm.controls.brand. errors?.maxlength" class="text-danger">max 10 chars</span>
    </div>
    
<div class="form-group">
<input type="text" placeholder="Model" class="form-control" formControlName="model"/>
<span *ngIf="frm.controls.model.touched &&frm.controls.model. errors?.required" class="text-danger">Required</span>
<span *ngIf="frm.controls.model.touched &&frm.controls.model. errors?.minlength" class="text-danger">min 3 chars</span>
<span *ngIf="frm.controls.model.touched &&frm.controls.model. errors?.maxlength" class="text-danger">max 10 chars</span>
</div>

<div class="form-group">
<input type="text" placeholder="Price" class="form-control" formControlName="price"/>
<span *ngIf="frm.controls.price.touched && frm.controls.price. errors?.required" class="text-danger">Required</span>
<span *ngIf="frm.controls.price.touched &&frm.controls.price. errors?.minlength" class="text-danger">min 3 chars</span>
<span *ngIf="frm.controls.price.touched &&frm.controls.price. errors?.maxlength" class="text-danger">max 10 chars</span>
</div>
<div class ="form-group">
<input type="checkbox" formcontrolName="inStock"/>InStock
</div>

<div class="form-group">
<input type="text" placeholder="Phone" class="form-control" formControlName="phone"/>
<span *ngIf="frm.controls.phone.touched && frm.controls.phone. errors?.pattern" class="text-danger">Invalid Phone Number</span>
</div>         
<div class="form-group">
<input type="file" name="image"/>

<div class ="form-group">
<button [disabled]="frm.invalid"class="btn btn-success" (click)="onSave()">Save Product</button>
</div>
</div>


    `
})

export class RecativeFormComponent{
 frm:FormGroup;
    success: boolean;

constructor(fb:FormBuilder,private productSvc:ProductService){

    this.frm=fb.group({
        brand:['', [Validators.required, Validators.minLength(3), Validators.maxLength(10)]],
        model:['', [Validators.required,Validators.minLength(3), Validators.maxLength(10)]],
        price:['', [Validators.required,Validators.minLength(3), Validators.maxLength(10)]],
        inStock:[],
        phone:['',[Validators.pattern('[0-9]{3}-[0-9]{3}-[0-9]{4}')]]


    });


    }
    onSave(){
        if (this.frm.valid){
        this.productSvc.save(this.frm.value)
    .subscribe(res=>{
        this.success=true;
        this.frm.reset();
    },err=> console.log(err));
    };
}
}




/////app.module.ts code


import { NgModule, Component } from '@angular/core';
import { BrowserModule} from '@angular/platform-browser';
import { AppComponent } from './app.component';
import { HomeComponent } from './home/home.component';
import { AboutComponent } from './about/about.component';
import { ContactComponent } from './contact/contact.component';
import { ProductListComponent } from './product-list/product-list.component';
import { ProductComponent } from './product/product.component';
import { UserListComponent } from './userlist/user-list.component';
import { HttpClientModule } from '@angular/common/http';
import { HeaderComponent } from './header/header.component';
import { FooterComponent } from './footer/footer.component';
import { ServiceModule } from './services/ServiceModule';
import { RoutingModule } from './router/routing.module';
import { ProductDetailComponent } from './product-detail/product-detail.component';
import { TimePipe } from './services/time.pipe';
import { NewProductComponent } from './services/new-product/new-product.component';
import {FormsModule, ReactiveFormsModule, }from '@angular/forms';
import { RecativeFormComponent } from './reactive-form/reactive-form.component';

@NgModule({

    imports:[BrowserModule,HttpClientModule,ServiceModule,FormsModule,ReactiveFormsModule,ReactiveFormsModule,RoutingModule],


    declarations:[AppComponent,HomeComponent,AboutComponent,ContactComponent,
        ProductListComponent,ProductComponent,UserListComponent, 
        HeaderComponent, FooterComponent,ProductDetailComponent,TimePipe,NewProductComponent,RecativeFormComponent],
    
        
        
        bootstrap:[AppComponent],
})


export class AppModule{}




///////product-list.component.ts


import { Component } from '@angular/core';
import { HttpClient } from "@angular/common/http";
import { ProductService } from '../services/product.service';
import { ConsoleLogger } from '../services/console.logger';

@Component({
    selector:'app-product-list',
    template:`
    
    <div class ="container">
    <h1>Product List</h1>
<button routerLink="/products/new"class="btn btn-primary">Add New Product</button>   
&nbsp;&nbsp;
<button routerLink="/products/reactive-form"class="btn btn-primary">Reactive Form</button>

<div *ngFor="let product of products">

    <app-product [product]="product"></app-product>
    </div>
    </div>`

})

export class ProductListComponent{
    products : any;

    constructor(svc : ProductService, Logger:ConsoleLogger){
        Logger.warn("loading data");
//Http.get("http://exp-rest-api.herokuapp.com/api/products")
//var svc = new ProductService(Http);  
svc.get()
.subscribe(res=>this.products=res["data"],err=>console.log(err));
        Logger.log("loaded");   
    }
}






////////routing.module.ts



import { NgModule, Component } from '@angular/core';
import { RouterModule, Route} from '@angular/router';
import { HomeComponent } from '../home/home.component';
import { AboutComponent } from '../about/about.component';
import { ContactComponent } from '../contact/contact.component';
import { ProductListComponent } from '../product-list/product-list.component';
import { ProductDetailComponent } from '../product-detail/product-detail.component';
import { NewProductComponent } from '../services/new-product/new-product.component';
import { RecativeFormComponent } from '../reactive-form/reactive-form.component';


const ROUTES=[{path: '', component:HomeComponent},
{path:'about', component:AboutComponent},
{path:'contact', component:ContactComponent},
{path:'products', component:ProductListComponent},
{path:'products/new',component:NewProductComponent},
{path:'products/reactive-form',component:RecativeFormComponent},
{path:'products/:id',component:ProductDetailComponent},

{path:'**', redirectTo:''}];


@NgModule({
imports:[ RouterModule.forRoot(ROUTES)],
exports :[RouterModule]
})

export class RoutingModule{}





//////new-product.component.ts



import { Component } from '@angular/core';
import { ProductService } from '../product.service';
import { Router } from '@angular/router';


@Component({
 template:`<h1>New Product</h1>

<div class ="col-md-6">
<div *ngIf="success" class="alert alert-success">Successfully Saved!!</div>
<div *ngIf="failed" class ="alert alert-danger">Failed to save data.Please try again</div>


<form novalidate #frm="ngForm">

<div class = " form-group"> 
<input #brand="ngModel" minlength="3" maxlength="10" required  name="brand" type="text" placeholder = "Brand" class= "form-control"[(ngModel)]="product.brand"/>
<span *ngIf="brand.touched && brand.errors?.required" class = "text-danger">Required </span>
<span *ngIf="brand.touched && brand.errors?.minlength" class = "text-danger">Min 3 chars </span>
<span *ngIf="brand.touched && brand.errors?.maxlength" class = "text-danger">Max 10 chars</span>
</div>

<div class="form-group"> 
<input #model="ngModel" minlength="3" maxlength="10" required name="model" type="text" placeholder = "Model" class= "form-control"[(ngModel)]="product.model"/>
<span *ngIf="model.touched && model.errors?.required" class = "text-danger">Required </span>
<span *ngIf="model.touched && model.errors?.minlength" class = "text-danger">Min 3 chars </span>
<span *ngIf="model.touched && model.errors?.maxlength" class = "text-danger">Max 10 chars </span>
</div>

<div class = " form-group"> 
<input #price="ngModel" minlength="3" maxlength="10" required name="price" type="text" placeholder = "Price" class= "form-control"[(ngModel)]="product.price"/>
<span *ngIf="price.touched && price.errors?.required" class = "text-danger">Required </span>
<span *ngIf="price.touched && price.errors?.minlength" class = "text-danger">Min 3 chars </span>
<span *ngIf="price.touched && price.errors?.maxlength" class = "text-danger">Max 10 chars </span>
</div>

<div class = " form-group"> 
<input name="inStock" type="checkbox" [(ngModel)]="product.inStock"/>
InStock
</div>


<div class = " form-group"> 
<input #phone="ngModel" name ="phone" type="textbox"[(ngModel)]="product.phone" class="form-control"
pattern ="[0-9]{3}-[0-9]{3}-[0-9]{4}"placeholder="phone"/>
<span *ngIf="phone.errors?.pattern" class="text-danger">Invalid Phone Number</span>
</div>
<div class = " form-group"> 
<button class="btn btn-success" (click)="onSave()"[disabled]="frm.invalid">
Save Product</button>
</div>

 `
})

export class NewProductComponent{

    product : any= {};
success:boolean;
    failed: boolean;

constructor(private svc:ProductService, private router:Router){}

    onSave(){
 this.svc.save(this.product)

 .subscribe(res => {
            this.success = true;
            this.failed=false;
            this.product={};
            this.router.navigate(["/products"]);

        
    }, err =>{
        this.failed=true;
        this.success=false;
    });
}}




///////styles.css




/* You can add global styles to this file, and also import other style files */
.red{
    background-color: red;
}
.green{
    color:green;

}
.circle-img{
    border-radius: 50px;
}
.navbar-brand,.navbar ul li a, footer{

    color:#ffff !important;
}

.loader{
position: relative;
margin-top: 30px;
border: 1px solid gray;
height: 35px;
widows: 150px;

}

input.ng-invalid{
    border-left: 5px solid brown;
}


input.ng-valid{
    border-left: 5px solid green;
}





