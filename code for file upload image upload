//////new.product.component.ts

import { Component } from '@angular/core';
import { ProductService } from '../product.service';
import { Router } from '@angular/router';


@Component({
 template:`<h1>New Product</h1>

<div class ="col-md-6">
<div *ngIf="success" class="alert alert-success">Successfully Saved!!</div>
<div *ngIf="failed" class ="alert alert-danger">Failed to save data.Please try again</div>


<form novalidate #frm="ngForm">

<div class = " form-group"> 
<input #brand="ngModel" minlength="3" maxlength="10" required  name="brand" type="text" placeholder = "Brand" class= "form-control"[(ngModel)]="product.brand"/>
<span *ngIf="brand.touched && brand.errors?.required" class = "text-danger">Required </span>
<span *ngIf="brand.touched && brand.errors?.minlength" class = "text-danger">Min 3 chars </span>
<span *ngIf="brand.touched && brand.errors?.maxlength" class = "text-danger">Max 10 chars</span>
</div>

<div class="form-group"> 
<input #model="ngModel" minlength="3" maxlength="10" required name="model" type="text" placeholder = "Model" class= "form-control"[(ngModel)]="product.model"/>
<span *ngIf="model.touched && model.errors?.required" class = "text-danger">Required </span>
<span *ngIf="model.touched && model.errors?.minlength" class = "text-danger">Min 3 chars </span>
<span *ngIf="model.touched && model.errors?.maxlength" class = "text-danger">Max 10 chars </span>
</div>

<div class = " form-group"> 
<input #price="ngModel" minlength="3" maxlength="10" required name="price" type="text" placeholder = "Price" class= "form-control"[(ngModel)]="product.price"/>
<span *ngIf="price.touched && price.errors?.required" class = "text-danger">Required </span>
<span *ngIf="price.touched && price.errors?.minlength" class = "text-danger">Min 3 chars </span>
<span *ngIf="price.touched && price.errors?.maxlength" class = "text-danger">Max 10 chars </span>
</div>

<div class = " form-group"> 
<input name="inStock" type="checkbox" [(ngModel)]="product.inStock"/>
InStock
</div>


<div class = " form-group"> 
<input #phone="ngModel" name ="phone" type="textbox"[(ngModel)]="product.phone" class="form-control"
pattern ="[0-9]{3}-[0-9]{3}-[0-9]{4}"placeholder="phone"/>
<span *ngIf="phone.errors?.pattern" class="text-danger">Invalid Phone Number</span>
</div>

<div class = "form-group">
<input type="file" name="image"(change)="handleUpload($event)"/>


<div class = " form-group"> 
<button class="btn btn-success" (click)="onSave()"[disabled]="frm.invalid">
Save Product</button>
</div>

 `
})

export class NewProductComponent{

    product : any= {};
    success:boolean;
    failed: boolean;

constructor(private svc:ProductService, private router:Router){}
handleUpload(event){
    this.product.img=event.target.files[0];
}

    onSave(){
 this.svc.save(this.product)

 .subscribe(res => {
            this.success = true;
            this.failed=false;
            this.product={};
            this.router.navigate(["/products"]);

        
    }, err =>{
        this.failed=true;
        this.success=false;
    });

}}



/////product.service.ts



import { Component } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { map , retry} from 'rxjs/operators';
import { pipe, Observable } from 'rxjs';

export class ProductService{

   // private http:HttpClient;

    constructor(private http:HttpClient){ //dependancy injection
                
     //   this.http=http;

    }
    get():Observable<any>
    
    {
        return this.http.get("http://exp-rest-api.herokuapp.com/api/products");
        pipe(map(res=>res['data']));
    }

    getById(id:string):Observable<any> {
        return this.http.get('http://exp-rest-api.herokuapp.com/api/products/'+ id);
    }

save (product:any):Observable<any>{
    var frmData:FormData=new FormData();
    for (var key in product){
        frmData.append(key,product[key]);
    }
return this.http.post('http://exp-rest-api.herokuapp.com/api/products',frmData,{headers:{}});
}

}


//////product.component.ts


import { Component, Input } from '@angular/core';
import * as moment from'moment';


@Component({
    selector:"app-product",
    template:`
    <div class="card">
    <div class="card-body">
  <img class="img img-thumbnail" width="120" height = "120"[src]="product.image"/>
    <a routerLink="/products/{{product._id}}"> <h3 class="card-title"> {{product.brand | uppercase}}{{product.model | lowercase}}</h3></a>
    <b>{{product.price | currency}}</b>
    <div >InStock:<input type="checkbox" disabled="true"[checked]="product.instock">
    <div>{{product.lastUpdated | date:'MMM-dd-yyyy hh:mm:ss a'}}</div>
    <div>{{product.lastUpdated | time}}</div>


    </div> `
})


export class ProductComponent{
    @Input()
    product:any;

    getRelativeTime(date){
        return moment(date).fromNow();
        }


}






///////
